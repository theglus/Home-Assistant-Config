#################################################################
## Base Button Properties
#################################################################
  aspect_ratio: 1/1
  show_state: true
  show_icon: false
  variables:
    state: >
      [[[ return entity === undefined || entity.state; ]]]
    timeout: >
      [[[ return entity === undefined || Date.now() - Date.parse(entity.last_changed); ]]]
    consider_on: >
      [[[
        var state = entity === undefined || entity.state;
        return (
          state == 'on' ||
          state == 'home' ||
          state == 'cool' ||
          state == 'fan_only' ||
          state == 'playing'
        );
      ]]]  
  tap_action:
    action: toggle
    haptic: light
  hold_action:
    action: none
  double_tap_action:
    haptic: selection
  styles:
    grid:
      - grid-template-areas: |
          "icon  circle"
          "n     n"
          "s     s"
      - grid-template-columns: repeat(2, 1fr)
      - grid-template-rows: auto repeat(2, min-content)
      - gap: 2%
      - align-items: start
    name:
      - justify-self: start
      - line-height: 115%
    state:
      - justify-self: start
      - line-height: 115%
    card:
      - font-family: Sf Display
      - border-radius: 2em
      - font-size: 1em
      - box-shadow: none
      - transition: none
      - padding: 10%
      - background-color: "rgba(115, 115, 115, 0.2)"
      - color: "rgba(255, 255, 255, 0.3)"
      - letter-spacing: 0.05em
  extra_styles: |
    [[[
      if (entity) {
        let hs = entity.attributes.hs_color == undefined;
        let h = hs || entity.attributes.hs_color[0];
        let s = hs || entity.attributes.hs_color[1];
        let l_min = 28;
        let l_max = 48;
        let l_calc =
          ((entity.attributes.brightness / 2.54) * (l_max - l_min)) / 100 + l_min;
        var light_color =
          entity.attributes.color_mode === 'color_temp'
            ? `hsl(204, 58%, ${l_calc}%);`
            : `hsl(${h}, ${s}%, ${l_calc}%);`;
      }
      return `
        svg {
          --light-color:
          ${ variables.state === 'on' && entity.attributes.brightness != undefined
              ? light_color
              : variables.state === 'on' && entity.attributes.brightness == undefined
              ? 'var(--state-icon-active-color);'
              : 'var(--state-icon-color);'
          }
        }